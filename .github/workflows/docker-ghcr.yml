name: Build and Push Multi-Arch Docker Image to GHCR
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build-per-arch:
    name: Build and Push ${{ matrix.platform }} Image
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            suffix: linux-amd64
            runner: ubuntu-24.04
          - platform: linux/arm64
            suffix: linux-arm64
            runner: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
            suffix=-${{ matrix.suffix }}
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag

      - name: Build and push ${{ matrix.platform }} image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: ${{ matrix.platform }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=ghcr.io/${{ github.repository }}

      - name: Save Digest and Tag
        id: save_data
        run: |
          # Use a generic name to save the digest (e.g., digest-linux-amd64)
          echo "${{ steps.build.outputs.digest }}" > ${{ runner.temp }}/digest-${{ matrix.suffix }}
          
          # Only the amd64 job needs to save the clean version tag
          if [ "${{ matrix.platform }}" == "linux/amd64" ]; then
            echo "${{ steps.meta.outputs.version }}" > ${{ runner.temp }}/final_tag
          fi

      - name: Upload Build Artifacts
        if: success() || always()
        uses: actions/upload-artifact@v4
        with:
          name: build-data-${{ matrix.suffix }}
          path: |
            ${{ runner.temp }}/digest-${{ matrix.suffix }}
            ${{ runner.temp }}/final_tag

  merge-manifest:
    name: Create Multi-Arch Manifest
    needs: build-per-arch 
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: /tmp
          pattern: build-data-*
          merge-multiple: true

      - name: Set platform and tag variables
        id: set_vars
        run: |
          # Read the architecture-specific digests
          echo "AMD64_DIGEST=$(cat /tmp/digests/digest-linux-amd64)" >> $GITHUB_ENV
          echo "ARM64_DIGEST=$(cat /tmp/digests/digest-linux-arm64)" >> $GITHUB_ENV
          
          # Read the final tag (e.g., v1.0.0)
          FINAL_TAG=$(cat /tmp/final-tag/final_tag)
          echo "FINAL_TAG=${FINAL_TAG}" >> $GITHUB_ENV

      - name: Create and push final multi-arch manifest
        run: |
          # The final tag (e.g., v1.0.0) is applied to the manifest list
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository }}:${{ env.FINAL_TAG }} \
            ghcr.io/${{ github.repository }}@${{ env.AMD64_DIGEST }} \
            ghcr.io/${{ github.repository }}@${{ env.ARM64_DIGEST }}